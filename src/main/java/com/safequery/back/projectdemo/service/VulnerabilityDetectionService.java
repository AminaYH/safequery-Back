package com.safequery.back.projectdemo.service;

import org.springframework.stereotype.Service;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

@Service
public class VulnerabilityDetectionService {

    public VulnerabilityResult checkForSQLInjection(String code) {
        // look for pattern that indicate sql injection like concatenation how ?
        Pattern sqlConcatenationPattern = Pattern.compile("(?i)\\b(SELECT|INSERT|UPDATE|DELETE|DROP)\\b.*[\\+\\|].*");
        Pattern sqlInjectionPattern = Pattern.compile("(?i)\\b(SELECT|INSERT|UPDATE|DELETE|DROP)\\b");

        Matcher matcher = sqlInjectionPattern.matcher(code);
        Matcher matcher1= sqlConcatenationPattern.matcher(code);
        if (matcher.find() || matcher.find()) {
            int start = matcher1.start();
            int end = matcher1.end();

            String matchedPart = code.substring(start, end);

            return new VulnerabilityResult(true, "SQL Injection vulnerability detected: " + matchedPart);

        } else {
            return new VulnerabilityResult(false, "No SQL Injection vulnerability found.");
        }
    }

    public static class VulnerabilityResult {
        private final boolean detected;
        private final String message;

        public VulnerabilityResult(boolean detected, String message) {
            this.detected = detected;
            this.message = message;
        }

        public boolean isDetected() {
            return detected;
        }

        public String getMessage() {
            return message;
        }
    }
}
